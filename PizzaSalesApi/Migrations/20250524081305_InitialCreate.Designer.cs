// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaSalesApi.Models;
using PizzaSalesApi.Models.Entities;

#nullable disable

namespace PizzaSalesApi.Migrations
{
  [DbContext(typeof(PizzaSalesContext))]
  [Migration("20250524081305_InitialCreate")]
  partial class InitialCreate
  {
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

      modelBuilder.Entity("PizzaSalesApi.Models.Order", b =>
          {
            b.Property<int>("OrderId")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER")
                      .HasAnnotation("Relational:JsonPropertyName", "order_id");

            b.Property<DateOnly>("Date")
                      .HasColumnType("TEXT");

            b.Property<TimeOnly>("Time")
                      .HasColumnType("TEXT");

            b.HasKey("OrderId");

            b.ToTable("Orders");
          });

      modelBuilder.Entity("PizzaSalesApi.Models.OrderDetail", b =>
          {
            b.Property<int>("OrderDetailId")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("INTEGER")
                      .HasAnnotation("Relational:JsonPropertyName", "order_details_id");

            b.Property<int>("OrderId")
                      .HasColumnType("INTEGER")
                      .HasAnnotation("Relational:JsonPropertyName", "order_id");

            b.Property<string>("PizzaId")
                      .IsRequired()
                      .HasColumnType("TEXT")
                      .HasAnnotation("Relational:JsonPropertyName", "pizza_id");

            b.Property<int>("Quantity")
                      .HasColumnType("INTEGER");

            b.HasKey("OrderDetailId");

            b.HasIndex("OrderId");

            b.HasIndex("PizzaId");

            b.ToTable("OrderDetails");
          });

      modelBuilder.Entity("PizzaSalesApi.Models.Pizza", b =>
          {
            b.Property<string>("PizzaId")
                      .HasColumnType("TEXT")
                      .HasAnnotation("Relational:JsonPropertyName", "pizza_id");

            b.Property<string>("PizzaTypeId")
                      .IsRequired()
                      .HasColumnType("TEXT")
                      .HasAnnotation("Relational:JsonPropertyName", "pizza_type_id");

            b.Property<decimal>("Price")
                      .HasColumnType("TEXT");

            b.Property<string>("Size")
                      .IsRequired()
                      .HasColumnType("TEXT");

            b.HasKey("PizzaId");

            b.HasIndex("PizzaTypeId");

            b.ToTable("Pizzas");
          });

      modelBuilder.Entity("PizzaSalesApi.Models.PizzaType", b =>
          {
            b.Property<string>("PizzaTypeId")
                      .HasColumnType("TEXT")
                      .HasAnnotation("Relational:JsonPropertyName", "pizza_type_id");

            b.Property<string>("Category")
                      .IsRequired()
                      .HasColumnType("TEXT");

            b.Property<string>("Ingredients")
                      .IsRequired()
                      .HasColumnType("TEXT");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasColumnType("TEXT");

            b.HasKey("PizzaTypeId");

            b.ToTable("PizzaTypes");
          });

      modelBuilder.Entity("PizzaSalesApi.Models.OrderDetail", b =>
          {
            b.HasOne("PizzaSalesApi.Models.Order", "Order")
                      .WithMany()
                      .HasForeignKey("OrderId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("PizzaSalesApi.Models.Pizza", "Pizza")
                      .WithMany()
                      .HasForeignKey("PizzaId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("Order");

            b.Navigation("Pizza");
          });

      modelBuilder.Entity("PizzaSalesApi.Models.Pizza", b =>
          {
            b.HasOne("PizzaSalesApi.Models.PizzaType", "PizzaType")
                      .WithMany()
                      .HasForeignKey("PizzaTypeId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("PizzaType");
          });
#pragma warning restore 612, 618
    }
  }
}
